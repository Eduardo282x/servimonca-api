generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  username  String
  password  String
  identify  String
  rolId     Int
  rol       Roles   @relation(fields: [rolId], references: [id])
  status    Boolean
}

model Roles {
  id   Int    @id @default(autoincrement())
  rol  String
  User User[]
}

model Maintenance {
  id              Int       @id @default(autoincrement())
  equipmentId     Int
  equipment       Equipment @relation(fields: [equipmentId], references: [id])
  sparePartId     Int
  sparePart       SparePart @relation(fields: [sparePartId], references: [id])
  type            String
  description     String
  maintenanceDate DateTime
  createdAt       DateTime  @default(now())
}

model SparePart {
  id           Int           @id @default(autoincrement())
  sparePart    String
  model        String
  brand        String
  amount       Int
  description  String
  criticAmount Int
  Maintenance  Maintenance[]
}

model Payment {
  id       Int      @id @default(autoincrement())
  bank     String
  identify String
  email    String
  phone    String
  owner    String
  type     String
  Rental   Rental[]
}

model Clients {
  id        Int      @id @default(autoincrement())
  name      String
  lastname  String
  rif       String
  phone     String
  email     String
  address   String
  rentals   Rental[]
  createdAt DateTime @default(now())
}

model Equipment {
  id            Int    @id @default(autoincrement())
  model         String
  serialNumber  String
  currentStatus String
  placa         String

  createdAt   DateTime      @default(now())
  Maintenance Maintenance[]
  Rental      Rental[]
}

model Rental {
  id              Int       @id @default(autoincrement())
  clientId        Int
  equipmentId     Int
  rentalStartDate DateTime
  rentalEndDate   DateTime
  totalCost       Int
  paymentId       Int
  checked         Boolean?
  description     String?
  status          Boolean
  payment         Payment   @relation(fields: [paymentId], references: [id])
  client          Clients   @relation(fields: [clientId], references: [id])
  equipment       Equipment @relation(fields: [equipmentId], references: [id])
  createdAt       DateTime  @default(now())
}
